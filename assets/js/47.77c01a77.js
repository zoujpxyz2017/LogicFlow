(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{450:function(s,t,a){"use strict";a.r(t);var e=a(29),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"边上插入节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#边上插入节点"}},[s._v("#")]),s._v(" 边上插入节点")]),s._v(" "),a("h2",{attrs:{id:"功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能"}},[s._v("#")]),s._v(" 功能")]),s._v(" "),a("p",[s._v("拖动节点到边中间，自动成为边中间的点。\n举例：存在一条节点A到节点B的折线E，拖拽一个节点N到折线E上，当节点N的中心点恰好在折线E的路径上时松开鼠标，这时节点N就成为A与B的中间节点，原来的边E被删除，生成两条新的折线，分别是A到N，N到B。示例如下。\n"),a("example",{attrs:{href:"/examples/#/extension/InserNodeInPolyline",height:450}})],1),s._v(" "),a("h2",{attrs:{id:"支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#支持"}},[s._v("#")]),s._v(" 支持")]),s._v(" "),a("p",[s._v("目前仅支持折线")]),s._v(" "),a("h2",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[s._v("#")]),s._v(" 使用")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" LogicFlow "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@logicflow/core'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@logicflow/core/dist/style/index.css"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" InsertNodeInPolyline "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@logicflow/extension'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@logicflow/extension/lib/style/index.css'")]),s._v("\nLogicFlow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("InsertNodeInPolyline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"个性化配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#个性化配置"}},[s._v("#")]),s._v(" 个性化配置")]),s._v(" "),a("p",[s._v("节点拖拽分为2种情况：")]),s._v(" "),a("ul",[a("li",[s._v("第一种是从控制面板拖拽到画布中，调用Dnd的Api进行节点添加，本插件默认支持。关闭此功能设置如下："),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("InsertNodeInPolyline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dndAdd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),a("li",[s._v("第二种是画布中的游离节点，即与其他节点没有边的节点，拖拽调整位置到边上，本插件默认支持。关闭此功能设置如下："),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("InsertNodeInPolyline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dropAdd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);